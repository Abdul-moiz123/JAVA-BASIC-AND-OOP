public class CONSTRUCTOR {

    //  CONSTRUCTOR IS A BLOCK WHICH HELP TO INITIALIZE THE VALUE TO THE ATTRIBUTES
    // CONSTRUCTOR IS AS SAME AS  INSTANCE METHOD BUT NOT A METHOD
    // CONSTRUCTOR NAME MUST MATCH THE CLASS NAME
    // CONSTRCTOR ARE NON RETRUN TYPE (NOT EVEN VOID)
    // CONSTRUCTOR CAN BE PUBLIC,PRIVATE,PROTECTED,DEFALUT
    // EVERY TIME YOU CREATE THE OBJECT THE CONSTRUCTOR WILL CALLED
    // CONSTRUCTOR CAN NOT BE FINAL,STATIC,SYNCHRONIZED
    // CONSTRUCTOR ARE NOT NECESSARY FOR THE CLASS (WANT MAKE IT OTHERWISE LEAVE IT)

    // THERE ARE TOTAL 3 TYPE OF CONSTRUCTOR:-
        //1) DEFAULT
        //2) PARAMETRIC
        //3) NO-ARGUMENTAL

    // ABSTARCT AND NORMAL CLASS CAN HAVE CONSTRUCTURE
    // INTERFACE CLASS CAN NOT HAVE A CONSTRUCTOR
    // METHOD CAN BE MAKE WITH SAME NAME AS CONSTRUCTOR BUT MUST BE OF VOID TYPE
    // CONSTRUCTOR CANNOT BE OVER-RIDDEN

    // CONSTRUCTOR CAN BE OVER-LOADDED
    //CONSTRUCTOR CHAINING --> INHERTITABNCE --> WHEN SUB CLASS CONSTRUCTOR ISN CALLED
    //                                           BY DEFAULT THE SUPER CLASS CONSTRUCTOR MUST CALLED
    //                                           WHERTHER YOU WRITE IT OR NOT (MUST BE IN FIRST STATMENT)

    // YOU CAN CREATE AS MANY AS YOU WANT

    int a,b;
    CONSTRUCTOR(){}  // NO-ARGUMENT CONSTRUCTOR

    CONSTRUCTOR(int a ){this.a=4;} // one arugment constructor

    CONSTRUCTOR(int a , int b){this.a=1;this.b=6;} // TWO ARUGMENT CONSTRUCTOR

}

abstract class Qayyum{
    // can have constructor

    int a;
    Qayyum(){}  // NO-ARGMENT CONSTURCTOR

    Qayyum(int a){this.a=334;}  // ONE ARUGEMNT CONSTRUCTOR
}

interface Koko{
    // no consturctor
}

